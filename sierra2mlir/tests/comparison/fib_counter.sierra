type felt252 = felt252;
type NonZero<felt252> = NonZero<felt252>;
type Tuple<felt252, felt252> = Struct<ut@Tuple, felt252, felt252>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt252> = drop<felt252>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_const<2> = felt252_const<2>;
libfunc struct_construct<Tuple<felt252, felt252>> = struct_construct<Tuple<felt252, felt252>>;
libfunc store_temp<Tuple<felt252, felt252>> = store_temp<Tuple<felt252, felt252>>;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_add = felt252_add;
libfunc felt252_sub = felt252_sub;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@fib_counter::fib_counter::fib> = function_call<user@fib_counter::fib_counter::fib>;
libfunc struct_deconstruct<Tuple<felt252, felt252>> = struct_deconstruct<Tuple<felt252, felt252>>;
libfunc rename<Tuple<felt252, felt252>> = rename<Tuple<felt252, felt252>>;
libfunc felt252_const<3> = felt252_const<3>;

disable_ap_tracking() -> ();
dup<felt252>([2]) -> ([2], [4]);
felt252_is_zero([4]) { fallthrough() 12([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
drop<felt252>([2]) -> ();
drop<felt252>([0]) -> ();
felt252_const<1>() -> ([5]);
felt252_const<2>() -> ([6]);
struct_construct<Tuple<felt252, felt252>>([5], [6]) -> ([7]);
store_temp<Tuple<felt252, felt252>>([7]) -> ([8]);
jump() { 27() };
branch_align() -> ();
drop<NonZero<felt252>>([3]) -> ();
dup<felt252>([1]) -> ([1], [10]);
felt252_add([0], [10]) -> ([9]);
felt252_const<1>() -> ([11]);
felt252_sub([2], [11]) -> ([12]);
store_temp<felt252>([1]) -> ([14]);
store_temp<felt252>([9]) -> ([15]);
store_temp<felt252>([12]) -> ([16]);
function_call<user@fib_counter::fib_counter::fib>([14], [15], [16]) -> ([13]);
struct_deconstruct<Tuple<felt252, felt252>>([13]) -> ([17], [18]);
felt252_const<1>() -> ([19]);
felt252_add([18], [19]) -> ([20]);
struct_construct<Tuple<felt252, felt252>>([17], [20]) -> ([21]);
store_temp<Tuple<felt252, felt252>>([21]) -> ([8]);
rename<Tuple<felt252, felt252>>([8]) -> ([22]);
return([22]);
disable_ap_tracking() -> ();
felt252_const<1>() -> ([0]);
felt252_const<1>() -> ([1]);
felt252_const<3>() -> ([2]);
store_temp<felt252>([0]) -> ([4]);
store_temp<felt252>([1]) -> ([5]);
store_temp<felt252>([2]) -> ([6]);
function_call<user@fib_counter::fib_counter::fib>([4], [5], [6]) -> ([3]);
rename<Tuple<felt252, felt252>>([3]) -> ([7]);
return([7]);

fib_counter::fib_counter::fib@0([0]: felt252, [1]: felt252, [2]: felt252) -> (Tuple<felt252, felt252>);
fib_counter::fib_counter::main@29() -> (Tuple<felt252, felt252>);
