type felt = felt;
type NonZero<felt> = NonZero<felt>;

libfunc dup<felt> = dup<felt>;
libfunc felt_is_zero = felt_is_zero;
libfunc branch_align = branch_align;
libfunc drop<felt> = drop<felt>;
libfunc felt_const<0> = felt_const<0>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc jump = jump;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc felt_const<2> = felt_const<2>;
libfunc felt_mul = felt_mul;
libfunc rename<felt> = rename<felt>;

dup<felt>([0]) -> ([0], [2]);
felt_is_zero([2]) { fallthrough() 7([1]) };
branch_align() -> ();
drop<felt>([0]) -> ();
felt_const<0>() -> ([3]);
store_temp<felt>([3]) -> ([4]);
jump() { 12() };
branch_align() -> ();
drop<NonZero<felt>>([1]) -> ();
felt_const<2>() -> ([5]);
felt_mul([0], [5]) -> ([6]);
store_temp<felt>([6]) -> ([4]);
rename<felt>([4]) -> ([7]);
return([7]);

felt_is_zero::felt_is_zero::mul_if_not_zero@0([0]: felt) -> (felt);

