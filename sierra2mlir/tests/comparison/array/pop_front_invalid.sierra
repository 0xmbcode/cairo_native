type u32 = u32;
type Array<u32> = Array<u32>;
type Box<u32> = Box<u32>;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::u32> = Enum<ut@core::option::Option::<core::integer::u32>, u32, Unit>;

libfunc array_new<u32> = array_new<u32>;
libfunc array_pop_front<u32> = array_pop_front<u32>;
libfunc branch_align = branch_align;
libfunc drop<Array<u32>> = drop<Array<u32>>;
libfunc unbox<u32> = unbox<u32>;
libfunc enum_init<core::option::Option::<core::integer::u32>, 0> = enum_init<core::option::Option::<core::integer::u32>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u32>> = store_temp<core::option::Option::<core::integer::u32>>;
libfunc jump = jump;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::integer::u32>, 1> = enum_init<core::option::Option::<core::integer::u32>, 1>;
libfunc rename<core::option::Option::<core::integer::u32>> = rename<core::option::Option::<core::integer::u32>>;

array_new<u32>() -> ([0]);
array_pop_front<u32>([0]) { fallthrough([1], [2]) 8([3]) };
branch_align() -> ();
drop<Array<u32>>([1]) -> ();
unbox<u32>([2]) -> ([4]);
enum_init<core::option::Option::<core::integer::u32>, 0>([4]) -> ([5]);
store_temp<core::option::Option::<core::integer::u32>>([5]) -> ([6]);
jump() { 13() };
branch_align() -> ();
drop<Array<u32>>([3]) -> ();
struct_construct<Unit>() -> ([7]);
enum_init<core::option::Option::<core::integer::u32>, 1>([7]) -> ([8]);
store_temp<core::option::Option::<core::integer::u32>>([8]) -> ([6]);
rename<core::option::Option::<core::integer::u32>>([6]) -> ([9]);
return([9]);

pop_front_invalid::pop_front_invalid::main@0() -> (core::option::Option::<core::integer::u32>);
