type felt = felt;
type Tuple<felt, felt> = Struct<ut@Tuple, felt, felt>;

libfunc felt_const<2> = felt_const<2>;
libfunc dup<felt> = dup<felt>;
libfunc felt_add = felt_add;
libfunc felt_sub = felt_sub;
libfunc struct_construct<Tuple<felt, felt>> = struct_construct<Tuple<felt, felt>>;
libfunc store_temp<Tuple<felt, felt>> = store_temp<Tuple<felt, felt>>;

felt_const<2>() -> ([1]);
dup<felt>([0]) -> ([0], [3]);
felt_add([3], [1]) -> ([2]);
felt_const<2>() -> ([4]);
felt_sub([0], [4]) -> ([5]);
struct_construct<Tuple<felt, felt>>([2], [5]) -> ([6]);
store_temp<Tuple<felt, felt>>([6]) -> ([7]);
return([7]);

simple::simple::something@0([0]: felt) -> (Tuple<felt, felt>);

