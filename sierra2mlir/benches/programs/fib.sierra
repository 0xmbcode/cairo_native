type BuiltinCosts = BuiltinCosts;
type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type felt252 = felt252;
type NonZero<felt252> = NonZero<felt252>;
type Tuple<felt252> = Struct<ut@Tuple, felt252>;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<(core::felt252,)> = Enum<ut@core::PanicResult::<(core::felt252,)>, Tuple<felt252>, Array<felt252>>;
type Unit = Struct<ut@Tuple>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type core::PanicResult::<((),)> = Enum<ut@core::PanicResult::<((),)>, Tuple<Unit>, Array<felt252>>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc branch_align = branch_align;
libfunc dup<felt252> = dup<felt252>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<felt252> = drop<felt252>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_add = felt252_add;
libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_sub = felt252_sub;
libfunc function_call<user@fib::fib::fib> = function_call<user@fib::fib::fib>;
libfunc enum_match<core::PanicResult::<(core::felt252,)>> = enum_match<core::PanicResult::<(core::felt252,)>>;
libfunc struct_deconstruct<Tuple<felt252>> = struct_deconstruct<Tuple<felt252>>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 0> = enum_init<core::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::felt252,)>> = store_temp<core::PanicResult::<(core::felt252,)>>;
libfunc enum_init<core::PanicResult::<(core::felt252,)>, 1> = enum_init<core::PanicResult::<(core::felt252,)>, 1>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc felt252_const<500> = felt252_const<500>;
libfunc drop<Tuple<felt252>> = drop<Tuple<felt252>>;
libfunc function_call<user@fib::fib::fib_mid> = function_call<user@fib::fib::fib_mid>;
libfunc enum_match<core::PanicResult::<((),)>> = enum_match<core::PanicResult::<((),)>>;
libfunc drop<Tuple<Unit>> = drop<Tuple<Unit>>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<GasBuiltin> = rename<GasBuiltin>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;
libfunc felt252_const<100> = felt252_const<100>;

disable_ap_tracking() -> ();
get_builtin_costs() -> ([5]);
store_temp<BuiltinCosts>([5]) -> ([5]);
withdraw_gas_all([0], [1], [5]) { fallthrough([6], [7]) 45([8], [9]) };
branch_align() -> ();
dup<felt252>([4]) -> ([4], [10]);
store_temp<RangeCheck>([6]) -> ([6]);
felt252_is_zero([10]) { fallthrough() 15([11]) };
branch_align() -> ();
drop<felt252>([4]) -> ();
drop<felt252>([3]) -> ();
store_temp<RangeCheck>([6]) -> ([12]);
store_temp<GasBuiltin>([7]) -> ([13]);
store_temp<felt252>([2]) -> ([14]);
jump() { 33() };
branch_align() -> ();
drop<NonZero<felt252>>([11]) -> ();
dup<felt252>([3]) -> ([3], [16]);
felt252_add([2], [16]) -> ([15]);
felt252_const<1>() -> ([17]);
felt252_sub([4], [17]) -> ([18]);
store_temp<RangeCheck>([6]) -> ([22]);
store_temp<GasBuiltin>([7]) -> ([23]);
store_temp<felt252>([3]) -> ([24]);
store_temp<felt252>([15]) -> ([25]);
store_temp<felt252>([18]) -> ([26]);
function_call<user@fib::fib::fib>([22], [23], [24], [25], [26]) -> ([19], [20], [21]);
enum_match<core::PanicResult::<(core::felt252,)>>([21]) { fallthrough([27]) 39([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([27]) -> ([29]);
store_temp<RangeCheck>([19]) -> ([12]);
store_temp<GasBuiltin>([20]) -> ([13]);
store_temp<felt252>([29]) -> ([14]);
struct_construct<Tuple<felt252>>([14]) -> ([30]);
enum_init<core::PanicResult::<(core::felt252,)>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([12]) -> ([32]);
store_temp<GasBuiltin>([13]) -> ([33]);
store_temp<core::PanicResult::<(core::felt252,)>>([31]) -> ([34]);
return([32], [33], [34]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::felt252,)>, 1>([28]) -> ([35]);
store_temp<RangeCheck>([19]) -> ([36]);
store_temp<GasBuiltin>([20]) -> ([37]);
store_temp<core::PanicResult::<(core::felt252,)>>([35]) -> ([38]);
return([36], [37], [38]);
branch_align() -> ();
drop<felt252>([4]) -> ();
drop<felt252>([3]) -> ();
drop<felt252>([2]) -> ();
array_new<felt252>() -> ([39]);
felt252_const<375233589013918064796019>() -> ([40]);
store_temp<felt252>([40]) -> ([40]);
array_append<felt252>([39], [40]) -> ([41]);
enum_init<core::PanicResult::<(core::felt252,)>, 1>([41]) -> ([42]);
store_temp<RangeCheck>([8]) -> ([43]);
store_temp<GasBuiltin>([9]) -> ([44]);
store_temp<core::PanicResult::<(core::felt252,)>>([42]) -> ([45]);
return([43], [44], [45]);
disable_ap_tracking() -> ();
get_builtin_costs() -> ([3]);
store_temp<BuiltinCosts>([3]) -> ([3]);
withdraw_gas_all([0], [1], [3]) { fallthrough([4], [5]) 116([6], [7]) };
branch_align() -> ();
dup<felt252>([2]) -> ([2], [8]);
store_temp<RangeCheck>([4]) -> ([4]);
felt252_is_zero([8]) { fallthrough() 71([9]) };
branch_align() -> ();
drop<felt252>([2]) -> ();
store_temp<RangeCheck>([4]) -> ([10]);
store_temp<GasBuiltin>([5]) -> ([11]);
jump() { 96() };
branch_align() -> ();
drop<NonZero<felt252>>([9]) -> ();
felt252_const<0>() -> ([12]);
felt252_const<1>() -> ([13]);
felt252_const<500>() -> ([14]);
store_temp<RangeCheck>([4]) -> ([18]);
store_temp<GasBuiltin>([5]) -> ([19]);
store_temp<felt252>([12]) -> ([20]);
store_temp<felt252>([13]) -> ([21]);
store_temp<felt252>([14]) -> ([22]);
function_call<user@fib::fib::fib>([18], [19], [20], [21], [22]) -> ([15], [16], [17]);
enum_match<core::PanicResult::<(core::felt252,)>>([17]) { fallthrough([23]) 109([24]) };
branch_align() -> ();
drop<Tuple<felt252>>([23]) -> ();
felt252_const<1>() -> ([25]);
felt252_sub([2], [25]) -> ([26]);
store_temp<RangeCheck>([15]) -> ([30]);
store_temp<GasBuiltin>([16]) -> ([31]);
store_temp<felt252>([26]) -> ([32]);
function_call<user@fib::fib::fib_mid>([30], [31], [32]) -> ([27], [28], [29]);
enum_match<core::PanicResult::<((),)>>([29]) { fallthrough([33]) 103([34]) };
branch_align() -> ();
drop<Tuple<Unit>>([33]) -> ();
store_temp<RangeCheck>([27]) -> ([10]);
store_temp<GasBuiltin>([28]) -> ([11]);
struct_construct<Unit>() -> ([35]);
struct_construct<Tuple<Unit>>([35]) -> ([36]);
enum_init<core::PanicResult::<((),)>, 0>([36]) -> ([37]);
rename<RangeCheck>([10]) -> ([38]);
rename<GasBuiltin>([11]) -> ([39]);
store_temp<core::PanicResult::<((),)>>([37]) -> ([40]);
return([38], [39], [40]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([34]) -> ([41]);
store_temp<RangeCheck>([27]) -> ([42]);
store_temp<GasBuiltin>([28]) -> ([43]);
store_temp<core::PanicResult::<((),)>>([41]) -> ([44]);
return([42], [43], [44]);
branch_align() -> ();
drop<felt252>([2]) -> ();
enum_init<core::PanicResult::<((),)>, 1>([24]) -> ([45]);
store_temp<RangeCheck>([15]) -> ([46]);
store_temp<GasBuiltin>([16]) -> ([47]);
store_temp<core::PanicResult::<((),)>>([45]) -> ([48]);
return([46], [47], [48]);
branch_align() -> ();
drop<felt252>([2]) -> ();
array_new<felt252>() -> ([49]);
felt252_const<375233589013918064796019>() -> ([50]);
store_temp<felt252>([50]) -> ([50]);
array_append<felt252>([49], [50]) -> ([51]);
enum_init<core::PanicResult::<((),)>, 1>([51]) -> ([52]);
store_temp<RangeCheck>([6]) -> ([53]);
store_temp<GasBuiltin>([7]) -> ([54]);
store_temp<core::PanicResult::<((),)>>([52]) -> ([55]);
return([53], [54], [55]);
disable_ap_tracking() -> ();
felt252_const<100>() -> ([2]);
store_temp<RangeCheck>([0]) -> ([6]);
store_temp<GasBuiltin>([1]) -> ([7]);
store_temp<felt252>([2]) -> ([8]);
function_call<user@fib::fib::fib_mid>([6], [7], [8]) -> ([3], [4], [5]);
enum_match<core::PanicResult::<((),)>>([5]) { fallthrough([9]) 143([10]) };
branch_align() -> ();
drop<Tuple<Unit>>([9]) -> ();
struct_construct<Unit>() -> ([11]);
struct_construct<Tuple<Unit>>([11]) -> ([12]);
enum_init<core::PanicResult::<((),)>, 0>([12]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([14]);
store_temp<GasBuiltin>([4]) -> ([15]);
store_temp<core::PanicResult::<((),)>>([13]) -> ([16]);
return([14], [15], [16]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([10]) -> ([17]);
store_temp<RangeCheck>([3]) -> ([18]);
store_temp<GasBuiltin>([4]) -> ([19]);
store_temp<core::PanicResult::<((),)>>([17]) -> ([20]);
return([18], [19], [20]);

fib::fib::fib@0([0]: RangeCheck, [1]: GasBuiltin, [2]: felt252, [3]: felt252, [4]: felt252) -> (RangeCheck, GasBuiltin, core::PanicResult::<(core::felt252,)>);
fib::fib::fib_mid@58([0]: RangeCheck, [1]: GasBuiltin, [2]: felt252) -> (RangeCheck, GasBuiltin, core::PanicResult::<((),)>);
fib::fib::main@127([0]: RangeCheck, [1]: GasBuiltin) -> (RangeCheck, GasBuiltin, core::PanicResult::<((),)>);
